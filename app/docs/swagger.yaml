definitions:
  types.LoginDto:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  types.LoginResponse:
    properties:
      created_at:
        type: string
      email:
        type: string
      id:
        type: string
      refresh_token:
        type: string
      token:
        type: string
      updated_at:
        type: string
      user_id:
        type: string
      user_type:
        type: string
    required:
    - email
    - user_type
    type: object
  types.SignUpDto:
    properties:
      email:
        type: string
      password:
        minLength: 6
        type: string
    required:
    - email
    - password
    type: object
  types.UpdatePasswordDto:
    properties:
      password:
        minLength: 6
        type: string
    required:
    - password
    type: object
  types.UpdateUserDto:
    properties:
      email:
        type: string
    required:
    - email
    type: object
  types.UserPublic:
    properties:
      created_at:
        type: string
      email:
        type: string
      id:
        type: string
      updated_at:
        type: string
      user_id:
        type: string
      user_type:
        type: string
    required:
    - email
    - user_type
    type: object
info:
  contact: {}
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      parameters:
      - description: Email and password
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/types.LoginDto'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.LoginResponse'
      summary: Allows a user to login
      tags:
      - auth
  /auth/signup:
    post:
      consumes:
      - application/json
      parameters:
      - description: Email and password
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/types.SignUpDto'
      produces:
      - application/json
      responses:
        "201":
          description: Created
      summary: Allows a user to sign up
      tags:
      - auth
  /users/{id}:
    get:
      parameters:
      - description: Bearer
        in: header
        name: Authorization
        required: true
        type: string
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.UserPublic'
      summary: Allows an admin to get a user's details
      tags:
      - users
  /users/all:
    get:
      parameters:
      - description: Bearer
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.UserPublic'
      summary: Allows an admin to get all users
      tags:
      - users
  /users/self:
    get:
      parameters:
      - description: Bearer
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.UserPublic'
      summary: Allows a user to get their own details
      tags:
      - users
  /users/self/password:
    patch:
      consumes:
      - application/json
      parameters:
      - description: Bearer
        in: header
        name: Authorization
        required: true
        type: string
      - description: User details
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/types.UpdatePasswordDto'
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Allows a user to update their password
      tags:
      - users
  /users/self/profile:
    patch:
      consumes:
      - application/json
      parameters:
      - description: Bearer
        in: header
        name: Authorization
        required: true
        type: string
      - description: User details
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/types.UpdateUserDto'
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Allows a user to update their profile
      tags:
      - users
swagger: "2.0"
